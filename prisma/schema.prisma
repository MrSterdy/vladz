generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WeekdayTimetable {
  weekday Int @unique

  offset Int

  subjectLength Int
  subjectBreak  Int

  subjects WeekdaySubject[]
}

model WeekdaySubject {
  name String @db.VarChar(128)

  length Int
  break  Int

  position Int

  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int

  classroom String @db.VarChar(128)

  timetable        WeekdayTimetable @relation(fields: [timetableWeekday], references: [weekday])
  timetableWeekday Int

  @@unique([timetableWeekday, position])
}

model DateTimetable {
  date DateTime @unique @db.Date

  offset Int

  note String @db.VarChar(256)

  subjects DateSubject[]

  homeworks Homework[]
}

model DateSubject {
  name String @db.VarChar(128)

  length Int
  break  Int

  position Int

  teacher     Teacher? @relation(fields: [teacherId], references: [id])
  teacherId   Int?
  teacherName String?  @db.VarChar(256)

  classroom String @db.VarChar(128)

  timetable     DateTimetable @relation(fields: [timetableDate], references: [date])
  timetableDate DateTime      @db.Date

  homework Homework?

  @@unique([timetableDate, position])
}

model Homework {
  timetable     DateTimetable @relation(fields: [timetableDate], references: [date])
  timetableDate DateTime      @db.Date

  subject         DateSubject @relation(fields: [timetableDate, subjectPosition], references: [timetableDate, position])
  subjectPosition Int

  content String @db.Text

  @@unique([timetableDate, subjectPosition])
}

model Subject {
  name String @unique @db.VarChar(128)

  length Int
  break  Int

  teacher     Teacher? @relation(fields: [teacherId], references: [id])
  teacherId   Int?
  teacherName String   @db.VarChar(256)

  classroom String @db.VarChar(128)
}

model Teacher {
  id Int @id @default(autoincrement())

  firstName  String  @db.VarChar(128)
  lastName   String  @db.VarChar(128)
  middleName String? @db.VarChar(128)

  subjects        Subject[]
  dateSubjects    DateSubject[]
  weekdaySubjects WeekdaySubject[]
}

model Group {
  id Int @id @default(autoincrement())

  name String @db.VarChar(64)

  inviteCode String

  userGroups UserGroup[]
}

model User {
  id BigInt @id

  firstName String @db.VarChar(128)
  lastName  String @db.VarChar(128)

  role UserRole @default(USER)

  userGroups UserGroup[]
  userSecret UserSecret[]
}

model UserGroup {
  user   User   @relation(fields: [userId], references: [id])
  userId BigInt

  group   Group @relation(fields: [groupId], references: [id])
  groupId Int

  role GroupRole @default(STUDENT)

  @@id([userId, groupId])
}

model UserSecret {
  user   User   @relation(fields: [userId], references: [id])
  userId BigInt @unique

  secret String
}

enum UserRole {
  ADMIN
  HELPER
  USER
}

enum GroupRole {
  CURATOR
  REDACTOR
  STUDENT
}
